<idea-plugin url="https://github.com/lowkeyfish/sonar-intellij-plugin">
    <id>com.yujunyang.intellij.plugin.sonar</id>
    <name>SonarAnalyzer</name>
    <vendor email="hnyujunyang@163.com" url="https://github.com/lowkeyfish">Yu Junyang</vendor>

    <idea-version since-build="191"/>

    <description>
        Perform Sonar code analysis on Java projects, view code analysis reports, and prompt problem codes.
        All you have to do is to bind SonarQube, and you can use all functions without leaving the IDE.

        Support code analysis by scope, such as project files, module files, package files, changelist files, open files, and selected files.
        The report shows support for filtering and marking resolved issues.
    </description>

    <change-notes>
        <![CDATA[
        <h3>0.2.0</h3>
        <ul>
            <li>Support code analysis by scope, such as project files, module files, package files, changelist files, open files, and selected files.</li>
            <li>The report shows support for filtering and marking resolved issues.</li>
            <li>Supports the latest version of IDEA.</li>
        </ul>
        <h3>0.1.7</h3>
        <ul>
            <li>Support more SonarScanner properties, such as 'sonar.projectKey', 'sonar.projectName', 'sonar.projectVersion', etc.</li>
        </ul>
        <h3>0.1.6</h3>
        <ul>
            <li>Change 'sonar.working.directory' to '.idea/'.</li>
            <li>Change 'sonar.projectKey' and 'sonar.projectName'.</li>
        </ul>
        <h3>0.1.5</h3>
        <ul>
            <li>Fix the infinite loop caused by the rule[common-java:DuplicatedBlocks] not being found when parsing the report.</li>
        </ul>
        <h3>0.1.4</h3>
        <ul>
            <li>Fix NoSuchMethodError: 'okhttp3.HttpUrl.get(java.lang.String)' in some cases.</li>
        </ul>
        <h3>0.1.3</h3>
        <ul>
            <li>Fix used wrong Java version.</li>
        </ul>
        <h3>0.1.2</h3>
        <ul>
            <li>Fix files with code problems become read-only.</li>
            <li>When the rule is not found, continue to parse the report and display the analysis result.</li>
        </ul>
        ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>Git4Idea</depends>

    <extensions defaultExtensionNs="com.intellij">
        <applicationService serviceImplementation="com.yujunyang.intellij.plugin.sonar.config.WorkspaceSettings"/>
        <projectService serviceImplementation="com.yujunyang.intellij.plugin.sonar.config.ProjectSettings"/>
        <toolWindow
                icon="PluginIcons.LOGO_13X13"
                factoryClass="com.yujunyang.intellij.plugin.sonar.extensions.ToolWindowFactoryImpl"
                id="SonarAnalyzer"
                anchor="bottom"
        />
        <projectService serviceImplementation="com.yujunyang.intellij.plugin.sonar.service.ProblemCacheService"/>
        <projectService serviceImplementation="com.yujunyang.intellij.plugin.sonar.service.GitService"/>
        <projectService serviceImplementation="com.yujunyang.intellij.plugin.sonar.service.ProjectCloseListener"/>
        <externalAnnotator language="JAVA"
                           implementationClass="com.yujunyang.intellij.plugin.sonar.extensions.SonarIssueExternalAnnotator"/>
        <externalAnnotator language="XML"
                           implementationClass="com.yujunyang.intellij.plugin.sonar.extensions.SonarIssueExternalAnnotator"/>
        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="com.yujunyang.intellij.plugin.sonar.extensions.SonarIssueLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.yujunyang.intellij.plugin.sonar.extensions.SonarIssueLineMarkerProvider"/>
        <applicationConfigurable parentId="tools" id="com.yujunyang.intellij.plugin.sonar.extensions.ApplicationSettingsConfigurable"
                instance="com.yujunyang.intellij.plugin.sonar.extensions.ApplicationSettingsConfigurable"/>
        <projectConfigurable parentId="com.yujunyang.intellij.plugin.sonar.extensions.ApplicationSettingsConfigurable"
                instance="com.yujunyang.intellij.plugin.sonar.extensions.ProjectSettingsConfigurable"
                             nonDefaultProject="true"
        />
    </extensions>

    <actions>
        <group id="SonarAnalyzer.AnalyzeMenu" text="SonarAnalyzer" popup="true">
            <add-to-group anchor="last" group-id="AnalyzeMenu"/>
            <add-to-group anchor="after" group-id="EditorPopupMenu" relative-to-action="AnalyzeMenu"/>
            <add-to-group anchor="after" group-id="ProjectViewPopupMenu" relative-to-action="AnalyzeMenu"/>
            <action class="com.yujunyang.intellij.plugin.sonar.actions.AnalyzeSelectedFiles"
                    id="SonarAnalyzer.AnalyzeSelectedFiles"></action>

            <action class="com.yujunyang.intellij.plugin.sonar.actions.AnalyzeOpenFiles"
                    id="SonarAnalyzer.AnalyzeOpenFiles" icon="PluginIcons.ANALYZE_OPEN_FILES_ICON"></action>
            <action class="com.yujunyang.intellij.plugin.sonar.actions.AnalyzeChangelistFiles"
                    id="SonarAnalyzer.AnalyzeChangelistFiles" icon="PluginIcons.ANALYZE_CHANGELIST_FILES_ICON"></action>
            <action class="com.yujunyang.intellij.plugin.sonar.actions.AnalyzePackageFiles"
                    id="SonarAnalyzer.AnalyzePackageFiles" icon="PluginIcons.ANALYZE_PACKAGE_FILES_ICON"></action>
            <action class="com.yujunyang.intellij.plugin.sonar.actions.AnalyzeModuleFilesNotIncludingTests"
                    id="SonarAnalyzer.AnalyzeModuleFilesNotIncludingTests" icon="PluginIcons.ANALYZE_MODULE_FILES_NOT_INCLUDING_TESTS_ICON"></action>
            <action id="SonarAnalyzer.ProjectFilesNotIncludingTestsAction"
                    class="com.yujunyang.intellij.plugin.sonar.actions.AnalyzeProjectFilesNotIncludingTests"
                    icon="PluginIcons.ANALYZE_PROJECT_FILES_NOT_INCLUDING_TESTS_ICON">
            </action>
        </group>

        <group id="SonarAnalyzer.ToolBarActions.left" text="SonarAnalyzer Actions" popup="true">
            <action id="SonarAnalyzer.Start"
                    class="com.yujunyang.intellij.plugin.sonar.actions.AnalyzeProjectFilesNotIncludingTests"
                    icon="PluginIcons.ANALYZE_EXECUTE">
            </action>

            <separator/>
            <action id="SonarAnalyzer.Setting"
                    class="com.yujunyang.intellij.plugin.sonar.actions.ShowSettingDialogAction"
                    icon="PluginIcons.PLUGIN_SETTING">
            </action>
            <action id="SonarAnalyzer.Setting.AutoScrollToSource"
                    class="com.yujunyang.intellij.plugin.sonar.actions.AutoScrollToSourceAction"
                    icon="PluginIcons.PLUGIN_AUTO_SCROLL_TO_SOURCE">
            </action>
            <separator/>
            <action id="SonarAnalyzer.Cancel"
                    class="com.yujunyang.intellij.plugin.sonar.actions.ClearAndCloseToolWindowAnalyzeAction"
                    icon="PluginIcons.ANALYZE_CLEAR">
            </action>
            <action id="SonarAnalyzer.Help"
                    class="com.yujunyang.intellij.plugin.sonar.actions.ShowHelpAction"
                    icon="PluginIcons.PLUGIN_HELP">
            </action>
            <action id="SonarAnalyzer.Test"
                    class="com.yujunyang.intellij.plugin.sonar.actions.TestAction"
                    text="测试"
                    description="测试"
                    icon="PluginIcons.SMILE">
            </action>
        </group>
    </actions>
</idea-plugin>